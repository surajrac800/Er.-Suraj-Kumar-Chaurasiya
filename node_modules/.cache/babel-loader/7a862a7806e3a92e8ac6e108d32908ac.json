{"ast":null,"code":"import { frame } from '../frameloop/index.mjs';\nimport { useRef, useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n  const [forceUpdate, forcedRenderCount] = useForceUpdate();\n  const startInstantLayoutTransition = useInstantLayoutTransition();\n  const unlockOnFrameRef = useRef();\n  useEffect(() => {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    frame.postRender(() => frame.postRender(() => {\n      /**\n       * If the callback has been called again after the effect\n       * triggered this 2 frame delay, don't unblock animations. This\n       * prevents the previous effect from unblocking the current\n       * instant transition too soon. This becomes more likely when\n       * used in conjunction with React.startTransition().\n       */\n      if (forcedRenderCount !== unlockOnFrameRef.current) return;\n      instantAnimationState.current = false;\n    }));\n  }, [forcedRenderCount]);\n  return callback => {\n    startInstantLayoutTransition(() => {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n      unlockOnFrameRef.current = forcedRenderCount + 1;\n    });\n  };\n}\n\nexport { useInstantTransition };","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs"],"names":["frame","useRef","useEffect","useInstantLayoutTransition","useForceUpdate","instantAnimationState","useInstantTransition","forceUpdate","forcedRenderCount","startInstantLayoutTransition","unlockOnFrameRef","postRender","current","callback"],"mappings":"AAAA,SAASA,KAAT,QAAsB,wBAAtB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,0BAAT,QAA2C,iDAA3C;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,qBAAT,QAAsC,oCAAtC;;AAEA,SAASC,oBAAT,GAAgC;AAC5B,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCJ,cAAc,EAAvD;AACA,QAAMK,4BAA4B,GAAGN,0BAA0B,EAA/D;AACA,QAAMO,gBAAgB,GAAGT,MAAM,EAA/B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACR;AACA;AACQF,IAAAA,KAAK,CAACW,UAAN,CAAiB,MAAMX,KAAK,CAACW,UAAN,CAAiB,MAAM;AAC1C;AACZ;AACA;AACA;AACA;AACA;AACA;AACY,UAAIH,iBAAiB,KAAKE,gBAAgB,CAACE,OAA3C,EACI;AACJP,MAAAA,qBAAqB,CAACO,OAAtB,GAAgC,KAAhC;AACH,KAXsB,CAAvB;AAYH,GAhBQ,EAgBN,CAACJ,iBAAD,CAhBM,CAAT;AAiBA,SAAQK,QAAD,IAAc;AACjBJ,IAAAA,4BAA4B,CAAC,MAAM;AAC/BJ,MAAAA,qBAAqB,CAACO,OAAtB,GAAgC,IAAhC;AACAL,MAAAA,WAAW;AACXM,MAAAA,QAAQ;AACRH,MAAAA,gBAAgB,CAACE,OAAjB,GAA2BJ,iBAAiB,GAAG,CAA/C;AACH,KAL2B,CAA5B;AAMH,GAPD;AAQH;;AAED,SAASF,oBAAT","sourcesContent":["import { frame } from '../frameloop/index.mjs';\nimport { useRef, useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    const unlockOnFrameRef = useRef();\n    useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        frame.postRender(() => frame.postRender(() => {\n            /**\n             * If the callback has been called again after the effect\n             * triggered this 2 frame delay, don't unblock animations. This\n             * prevents the previous effect from unblocking the current\n             * instant transition too soon. This becomes more likely when\n             * used in conjunction with React.startTransition().\n             */\n            if (forcedRenderCount !== unlockOnFrameRef.current)\n                return;\n            instantAnimationState.current = false;\n        }));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n            unlockOnFrameRef.current = forcedRenderCount + 1;\n        });\n    };\n}\n\nexport { useInstantTransition };\n"]},"metadata":{},"sourceType":"module"}