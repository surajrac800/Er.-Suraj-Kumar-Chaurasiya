{"ast":null,"code":"import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const resolved = resolveVariant(visualElement, variant, options.custom);\n  let {\n    transition = visualElement.getDefaultTransition() || {}\n  } = resolved || {};\n\n  if (options.transitionOverride) {\n    transition = options.transitionOverride;\n  }\n  /**\n   * If we have a variant, create a callback that runs it as an animation.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n\n\n  const getAnimation = resolved ? () => Promise.all(animateTarget(visualElement, resolved, options)) : () => Promise.resolve();\n  /**\n   * If we have children, create a callback that runs all their animations.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n\n  const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? function () {\n    let forwardDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const {\n      delayChildren = 0,\n      staggerChildren,\n      staggerDirection\n    } = transition;\n    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n  } : () => Promise.resolve();\n  /**\n   * If the transition explicitly defines a \"when\" option, we need to resolve either\n   * this animation or all children animations before playing the other.\n   */\n\n  const {\n    when\n  } = transition;\n\n  if (when) {\n    const [first, last] = when === \"beforeChildren\" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation];\n    return first().then(() => last());\n  } else {\n    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n  }\n}\n\nfunction animateChildren(visualElement, variant) {\n  let delayChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let staggerChildren = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let staggerDirection = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  let options = arguments.length > 5 ? arguments[5] : undefined;\n  const animations = [];\n  const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n  const generateStaggerDuration = staggerDirection === 1 ? function () {\n    let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return i * staggerChildren;\n  } : function () {\n    let i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return maxStaggerDuration - i * staggerChildren;\n  };\n  Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach((child, i) => {\n    child.notify(\"AnimationStart\", variant);\n    animations.push(animateVariant(child, variant, { ...options,\n      delay: delayChildren + generateStaggerDuration(i)\n    }).then(() => child.notify(\"AnimationComplete\", variant)));\n  });\n  return Promise.all(animations);\n}\n\nfunction sortByTreeOrder(a, b) {\n  return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs"],"names":["resolveVariant","animateTarget","animateVariant","visualElement","variant","options","resolved","custom","transition","getDefaultTransition","transitionOverride","getAnimation","Promise","all","resolve","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","animateChildren","when","first","last","then","delay","animations","maxStaggerDuration","generateStaggerDuration","i","Array","from","sort","sortByTreeOrder","forEach","child","notify","push","a","b","sortNodePosition"],"mappings":"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","sourcesContent":["import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n"]},"metadata":{},"sourceType":"module"}