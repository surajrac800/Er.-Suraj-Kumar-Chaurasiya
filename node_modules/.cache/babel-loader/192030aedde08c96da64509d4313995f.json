{"ast":null,"code":"export default function loopFix() {\n  let {\n    slideRealIndex,\n    slideTo = true,\n    direction,\n    setTranslate,\n    activeSlideIndex,\n    byController,\n    byMousewheel\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0; // prepend last slides before start\n\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex\n  /* + slidesPerView */\n  > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n\n  swiper.recalcSlides();\n\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n\n  swiper.emit('loopFix');\n}","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/swiper/core/loop/loopFix.js"],"names":["loopFix","slideRealIndex","slideTo","direction","setTranslate","activeSlideIndex","byController","byMousewheel","swiper","params","loop","emit","slides","allowSlidePrev","allowSlideNext","slidesEl","virtual","enabled","centeredSlides","snapIndex","length","slidesPerView","snapGrid","slidesBefore","slidesPerViewDynamic","Math","ceil","parseFloat","loopedSlides","slidesPerGroup","prependSlidesIndexes","appendSlidesIndexes","activeIndex","getSlideIndex","filter","el","classList","contains","slideActiveClass","isNext","isPrev","slidesPrepended","slidesAppended","max","i","index","floor","push","forEach","swiperLoopMoveDOM","prepend","append","recalcSlides","updateSlides","watchSlidesProgress","updateSlidesOffset","currentSlideTranslate","slidesGrid","newSlideTranslate","diff","translate","touches","isHorizontal","slideToLoop","controller","control","loopParams","Array","isArray","c","destroyed","constructor"],"mappings":"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","sourcesContent":["export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}"]},"metadata":{},"sourceType":"module"}