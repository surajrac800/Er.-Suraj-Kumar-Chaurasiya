{"ast":null,"code":"import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\"read\", \"update\", \"preRender\", \"render\", \"postRender\"];\nconst steps = stepsOrder.reduce((acc, key) => {\n  acc[key] = createRenderStep(() => runNextFrame = true);\n  return acc;\n}, {});\n\nconst processStep = stepId => steps[stepId].process(frameData);\n\nconst processFrame = timestamp => {\n  runNextFrame = false;\n  frameData.delta = useDefaultElapsed ? 1000 / 60 : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n  frameData.timestamp = timestamp;\n  frameData.isProcessing = true;\n  stepsOrder.forEach(processStep);\n  frameData.isProcessing = false;\n\n  if (runNextFrame) {\n    useDefaultElapsed = false;\n    requestAnimationFrame(processFrame);\n  }\n};\n\nconst startLoop = () => {\n  runNextFrame = true;\n  useDefaultElapsed = true;\n  if (!frameData.isProcessing) requestAnimationFrame(processFrame);\n};\n\nconst frame = stepsOrder.reduce((acc, key) => {\n  const step = steps[key];\n\n  acc[key] = function (process) {\n    let keepAlive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!runNextFrame) startLoop();\n    return step.schedule(process, keepAlive, immediate);\n  };\n\n  return acc;\n}, {});\n\nfunction cancelFrame(process) {\n  stepsOrder.forEach(key => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/framer-motion/dist/es/frameloop/index.mjs"],"names":["createRenderStep","frameData","maxElapsed","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","key","processStep","stepId","process","processFrame","timestamp","delta","Math","max","min","isProcessing","forEach","requestAnimationFrame","startLoop","frame","step","keepAlive","immediate","schedule","cancelFrame","cancel"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,0BAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,UAAU,GAAG,EAAnB;AACA,IAAIC,iBAAiB,GAAG,IAAxB;AACA,IAAIC,YAAY,GAAG,KAAnB;AACA,MAAMC,UAAU,GAAG,CACf,MADe,EAEf,QAFe,EAGf,WAHe,EAIf,QAJe,EAKf,YALe,CAAnB;AAOA,MAAMC,KAAK,GAAGD,UAAU,CAACE,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1CD,EAAAA,GAAG,CAACC,GAAD,CAAH,GAAWT,gBAAgB,CAAC,MAAOI,YAAY,GAAG,IAAvB,CAA3B;AACA,SAAOI,GAAP;AACH,CAHa,EAGX,EAHW,CAAd;;AAIA,MAAME,WAAW,GAAIC,MAAD,IAAYL,KAAK,CAACK,MAAD,CAAL,CAAcC,OAAd,CAAsBX,SAAtB,CAAhC;;AACA,MAAMY,YAAY,GAAIC,SAAD,IAAe;AAChCV,EAAAA,YAAY,GAAG,KAAf;AACAH,EAAAA,SAAS,CAACc,KAAV,GAAkBZ,iBAAiB,GAC7B,OAAO,EADsB,GAE7Ba,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASJ,SAAS,GAAGb,SAAS,CAACa,SAA/B,EAA0CZ,UAA1C,CAAT,EAAgE,CAAhE,CAFN;AAGAD,EAAAA,SAAS,CAACa,SAAV,GAAsBA,SAAtB;AACAb,EAAAA,SAAS,CAACkB,YAAV,GAAyB,IAAzB;AACAd,EAAAA,UAAU,CAACe,OAAX,CAAmBV,WAAnB;AACAT,EAAAA,SAAS,CAACkB,YAAV,GAAyB,KAAzB;;AACA,MAAIf,YAAJ,EAAkB;AACdD,IAAAA,iBAAiB,GAAG,KAApB;AACAkB,IAAAA,qBAAqB,CAACR,YAAD,CAArB;AACH;AACJ,CAbD;;AAcA,MAAMS,SAAS,GAAG,MAAM;AACpBlB,EAAAA,YAAY,GAAG,IAAf;AACAD,EAAAA,iBAAiB,GAAG,IAApB;AACA,MAAI,CAACF,SAAS,CAACkB,YAAf,EACIE,qBAAqB,CAACR,YAAD,CAArB;AACP,CALD;;AAMA,MAAMU,KAAK,GAAGlB,UAAU,CAACE,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1C,QAAMe,IAAI,GAAGlB,KAAK,CAACG,GAAD,CAAlB;;AACAD,EAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,UAACG,OAAD,EAAmD;AAAA,QAAzCa,SAAyC,uEAA7B,KAA6B;AAAA,QAAtBC,SAAsB,uEAAV,KAAU;AAC1D,QAAI,CAACtB,YAAL,EACIkB,SAAS;AACb,WAAOE,IAAI,CAACG,QAAL,CAAcf,OAAd,EAAuBa,SAAvB,EAAkCC,SAAlC,CAAP;AACH,GAJD;;AAKA,SAAOlB,GAAP;AACH,CARa,EAQX,EARW,CAAd;;AASA,SAASoB,WAAT,CAAqBhB,OAArB,EAA8B;AAC1BP,EAAAA,UAAU,CAACe,OAAX,CAAoBX,GAAD,IAASH,KAAK,CAACG,GAAD,CAAL,CAAWoB,MAAX,CAAkBjB,OAAlB,CAA5B;AACH;;AAED,SAASgB,WAAT,EAAsBL,KAAtB,EAA6BjB,KAA7B,EAAoCD,UAApC","sourcesContent":["import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n"]},"metadata":{},"sourceType":"module"}