{"ast":null,"code":"import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  visualElement.notify(\"AnimationStart\", definition);\n  let animation;\n\n  if (Array.isArray(definition)) {\n    const animations = definition.map(variant => animateVariant(visualElement, variant, options));\n    animation = Promise.all(animations);\n  } else if (typeof definition === \"string\") {\n    animation = animateVariant(visualElement, definition, options);\n  } else {\n    const resolvedDefinition = typeof definition === \"function\" ? resolveVariant(visualElement, definition, options.custom) : definition;\n    animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n  }\n\n  return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs"],"names":["resolveVariant","animateTarget","animateVariant","animateVisualElement","visualElement","definition","options","notify","animation","Array","isArray","animations","map","variant","Promise","all","resolvedDefinition","custom","then"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iDAA/B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,cAAT,QAA+B,8BAA/B;;AAEA,SAASC,oBAAT,CAA8BC,aAA9B,EAA6CC,UAA7C,EAAuE;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACnEF,EAAAA,aAAa,CAACG,MAAd,CAAqB,gBAArB,EAAuCF,UAAvC;AACA,MAAIG,SAAJ;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcL,UAAd,CAAJ,EAA+B;AAC3B,UAAMM,UAAU,GAAGN,UAAU,CAACO,GAAX,CAAgBC,OAAD,IAAaX,cAAc,CAACE,aAAD,EAAgBS,OAAhB,EAAyBP,OAAzB,CAA1C,CAAnB;AACAE,IAAAA,SAAS,GAAGM,OAAO,CAACC,GAAR,CAAYJ,UAAZ,CAAZ;AACH,GAHD,MAIK,IAAI,OAAON,UAAP,KAAsB,QAA1B,EAAoC;AACrCG,IAAAA,SAAS,GAAGN,cAAc,CAACE,aAAD,EAAgBC,UAAhB,EAA4BC,OAA5B,CAA1B;AACH,GAFI,MAGA;AACD,UAAMU,kBAAkB,GAAG,OAAOX,UAAP,KAAsB,UAAtB,GACrBL,cAAc,CAACI,aAAD,EAAgBC,UAAhB,EAA4BC,OAAO,CAACW,MAApC,CADO,GAErBZ,UAFN;AAGAG,IAAAA,SAAS,GAAGM,OAAO,CAACC,GAAR,CAAYd,aAAa,CAACG,aAAD,EAAgBY,kBAAhB,EAAoCV,OAApC,CAAzB,CAAZ;AACH;;AACD,SAAOE,SAAS,CAACU,IAAV,CAAe,MAAMd,aAAa,CAACG,MAAd,CAAqB,mBAArB,EAA0CF,UAA1C,CAArB,CAAP;AACH;;AAED,SAASF,oBAAT","sourcesContent":["import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n"]},"metadata":{},"sourceType":"module"}