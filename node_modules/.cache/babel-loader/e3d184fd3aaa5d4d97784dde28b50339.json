{"ast":null,"code":"import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n  const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n  const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n\n  const handleEvent = (event, info) => {\n    if (event.type === \"touch\" || isDragActive()) return;\n    const props = node.getProps();\n\n    if (node.animationState && props.whileHover) {\n      node.animationState.setActive(\"whileHover\", isActive);\n    }\n\n    if (props[callbackName]) {\n      frame.update(() => props[callbackName](event, info));\n    }\n  };\n\n  return addPointerEvent(node.current, eventName, handleEvent, {\n    passive: !node.getProps()[callbackName]\n  });\n}\n\nclass HoverGesture extends Feature {\n  mount() {\n    this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n  }\n\n  unmount() {}\n\n}\n\nexport { HoverGesture };","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/framer-motion/dist/es/gestures/hover.mjs"],"names":["addPointerEvent","pipe","isDragActive","Feature","frame","addHoverEvent","node","isActive","eventName","callbackName","handleEvent","event","info","type","props","getProps","animationState","whileHover","setActive","update","current","passive","HoverGesture","mount","unmount"],"mappings":"AAAA,SAASA,eAAT,QAAgC,iCAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AACnC,QAAMC,SAAS,GAAG,aAAaD,QAAQ,GAAG,OAAH,GAAa,OAAlC,CAAlB;AACA,QAAME,YAAY,GAAG,aAAaF,QAAQ,GAAG,OAAH,GAAa,KAAlC,CAArB;;AACA,QAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACjC,QAAID,KAAK,CAACE,IAAN,KAAe,OAAf,IAA0BX,YAAY,EAA1C,EACI;AACJ,UAAMY,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAd;;AACA,QAAIT,IAAI,CAACU,cAAL,IAAuBF,KAAK,CAACG,UAAjC,EAA6C;AACzCX,MAAAA,IAAI,CAACU,cAAL,CAAoBE,SAApB,CAA8B,YAA9B,EAA4CX,QAA5C;AACH;;AACD,QAAIO,KAAK,CAACL,YAAD,CAAT,EAAyB;AACrBL,MAAAA,KAAK,CAACe,MAAN,CAAa,MAAML,KAAK,CAACL,YAAD,CAAL,CAAoBE,KAApB,EAA2BC,IAA3B,CAAnB;AACH;AACJ,GAVD;;AAWA,SAAOZ,eAAe,CAACM,IAAI,CAACc,OAAN,EAAeZ,SAAf,EAA0BE,WAA1B,EAAuC;AACzDW,IAAAA,OAAO,EAAE,CAACf,IAAI,CAACS,QAAL,GAAgBN,YAAhB;AAD+C,GAAvC,CAAtB;AAGH;;AACD,MAAMa,YAAN,SAA2BnB,OAA3B,CAAmC;AAC/BoB,EAAAA,KAAK,GAAG;AACJ,SAAKC,OAAL,GAAevB,IAAI,CAACI,aAAa,CAAC,KAAKC,IAAN,EAAY,IAAZ,CAAd,EAAiCD,aAAa,CAAC,KAAKC,IAAN,EAAY,KAAZ,CAA9C,CAAnB;AACH;;AACDkB,EAAAA,OAAO,GAAG,CAAG;;AAJkB;;AAOnC,SAASF,YAAT","sourcesContent":["import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n"]},"metadata":{},"sourceType":"module"}