{"ast":null,"code":"import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n  const isTargetAnimatable = isAnimatable(valueName, target);\n  let keyframes;\n\n  if (Array.isArray(target)) {\n    keyframes = [...target];\n  } else {\n    keyframes = [null, target];\n  }\n\n  const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n  let animatableTemplateValue = undefined;\n  const noneKeyframeIndexes = [];\n\n  for (let i = 0; i < keyframes.length; i++) {\n    /**\n     * Fill null/wildcard keyframes\n     */\n    if (keyframes[i] === null) {\n      keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n    }\n\n    if (isNone(keyframes[i])) {\n      noneKeyframeIndexes.push(i);\n    } // TODO: Clean this conditional, it works for now\n\n\n    if (typeof keyframes[i] === \"string\" && keyframes[i] !== \"none\" && keyframes[i] !== \"0\") {\n      animatableTemplateValue = keyframes[i];\n    }\n  }\n\n  if (isTargetAnimatable && noneKeyframeIndexes.length && animatableTemplateValue) {\n    for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n      const index = noneKeyframeIndexes[i];\n      keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n    }\n  }\n\n  return keyframes;\n}\n\nexport { getKeyframes };","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs"],"names":["getAnimatableNone","isAnimatable","isNone","getKeyframes","value","valueName","target","transition","isTargetAnimatable","keyframes","Array","isArray","defaultOrigin","from","undefined","get","animatableTemplateValue","noneKeyframeIndexes","i","length","push","index"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,kDAAlC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,UAAhD,EAA4D;AACxD,QAAMC,kBAAkB,GAAGP,YAAY,CAACI,SAAD,EAAYC,MAAZ,CAAvC;AACA,MAAIG,SAAJ;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcL,MAAd,CAAJ,EAA2B;AACvBG,IAAAA,SAAS,GAAG,CAAC,GAAGH,MAAJ,CAAZ;AACH,GAFD,MAGK;AACDG,IAAAA,SAAS,GAAG,CAAC,IAAD,EAAOH,MAAP,CAAZ;AACH;;AACD,QAAMM,aAAa,GAAGL,UAAU,CAACM,IAAX,KAAoBC,SAApB,GAAgCP,UAAU,CAACM,IAA3C,GAAkDT,KAAK,CAACW,GAAN,EAAxE;AACA,MAAIC,uBAAuB,GAAGF,SAA9B;AACA,QAAMG,mBAAmB,GAAG,EAA5B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,SAAS,CAACU,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC;AACR;AACA;AACQ,QAAIT,SAAS,CAACS,CAAD,CAAT,KAAiB,IAArB,EAA2B;AACvBT,MAAAA,SAAS,CAACS,CAAD,CAAT,GAAeA,CAAC,KAAK,CAAN,GAAUN,aAAV,GAA0BH,SAAS,CAACS,CAAC,GAAG,CAAL,CAAlD;AACH;;AACD,QAAIhB,MAAM,CAACO,SAAS,CAACS,CAAD,CAAV,CAAV,EAA0B;AACtBD,MAAAA,mBAAmB,CAACG,IAApB,CAAyBF,CAAzB;AACH,KATsC,CAUvC;;;AACA,QAAI,OAAOT,SAAS,CAACS,CAAD,CAAhB,KAAwB,QAAxB,IACAT,SAAS,CAACS,CAAD,CAAT,KAAiB,MADjB,IAEAT,SAAS,CAACS,CAAD,CAAT,KAAiB,GAFrB,EAE0B;AACtBF,MAAAA,uBAAuB,GAAGP,SAAS,CAACS,CAAD,CAAnC;AACH;AACJ;;AACD,MAAIV,kBAAkB,IAClBS,mBAAmB,CAACE,MADpB,IAEAH,uBAFJ,EAE6B;AACzB,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,mBAAmB,CAACE,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,YAAMG,KAAK,GAAGJ,mBAAmB,CAACC,CAAD,CAAjC;AACAT,MAAAA,SAAS,CAACY,KAAD,CAAT,GAAmBrB,iBAAiB,CAACK,SAAD,EAAYW,uBAAZ,CAApC;AACH;AACJ;;AACD,SAAOP,SAAP;AACH;;AAED,SAASN,YAAT","sourcesContent":["import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n"]},"metadata":{},"sourceType":"module"}