{"ast":null,"code":"const namedEdges = {\n  start: 0,\n  center: 0.5,\n  end: 1\n};\n\nfunction resolveEdge(edge, length) {\n  let inset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let delta = 0;\n  /**\n   * If we have this edge defined as a preset, replace the definition\n   * with the numerical value.\n   */\n\n  if (namedEdges[edge] !== undefined) {\n    edge = namedEdges[edge];\n  }\n  /**\n   * Handle unit values\n   */\n\n\n  if (typeof edge === \"string\") {\n    const asNumber = parseFloat(edge);\n\n    if (edge.endsWith(\"px\")) {\n      delta = asNumber;\n    } else if (edge.endsWith(\"%\")) {\n      edge = asNumber / 100;\n    } else if (edge.endsWith(\"vw\")) {\n      delta = asNumber / 100 * document.documentElement.clientWidth;\n    } else if (edge.endsWith(\"vh\")) {\n      delta = asNumber / 100 * document.documentElement.clientHeight;\n    } else {\n      edge = asNumber;\n    }\n  }\n  /**\n   * If the edge is defined as a number, handle as a progress value.\n   */\n\n\n  if (typeof edge === \"number\") {\n    delta = length * edge;\n  }\n\n  return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs"],"names":["namedEdges","start","center","end","resolveEdge","edge","length","inset","delta","undefined","asNumber","parseFloat","endsWith","document","documentElement","clientWidth","clientHeight"],"mappings":"AAAA,MAAMA,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,CADQ;AAEfC,EAAAA,MAAM,EAAE,GAFO;AAGfC,EAAAA,GAAG,EAAE;AAHU,CAAnB;;AAKA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAA8C;AAAA,MAAXC,KAAW,uEAAH,CAAG;AAC1C,MAAIC,KAAK,GAAG,CAAZ;AACA;AACJ;AACA;AACA;;AACI,MAAIR,UAAU,CAACK,IAAD,CAAV,KAAqBI,SAAzB,EAAoC;AAChCJ,IAAAA,IAAI,GAAGL,UAAU,CAACK,IAAD,CAAjB;AACH;AACD;AACJ;AACA;;;AACI,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,UAAMK,QAAQ,GAAGC,UAAU,CAACN,IAAD,CAA3B;;AACA,QAAIA,IAAI,CAACO,QAAL,CAAc,IAAd,CAAJ,EAAyB;AACrBJ,MAAAA,KAAK,GAAGE,QAAR;AACH,KAFD,MAGK,IAAIL,IAAI,CAACO,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACzBP,MAAAA,IAAI,GAAGK,QAAQ,GAAG,GAAlB;AACH,KAFI,MAGA,IAAIL,IAAI,CAACO,QAAL,CAAc,IAAd,CAAJ,EAAyB;AAC1BJ,MAAAA,KAAK,GAAIE,QAAQ,GAAG,GAAZ,GAAmBG,QAAQ,CAACC,eAAT,CAAyBC,WAApD;AACH,KAFI,MAGA,IAAIV,IAAI,CAACO,QAAL,CAAc,IAAd,CAAJ,EAAyB;AAC1BJ,MAAAA,KAAK,GAAIE,QAAQ,GAAG,GAAZ,GAAmBG,QAAQ,CAACC,eAAT,CAAyBE,YAApD;AACH,KAFI,MAGA;AACDX,MAAAA,IAAI,GAAGK,QAAP;AACH;AACJ;AACD;AACJ;AACA;;;AACI,MAAI,OAAOL,IAAP,KAAgB,QAApB,EAA8B;AAC1BG,IAAAA,KAAK,GAAGF,MAAM,GAAGD,IAAjB;AACH;;AACD,SAAOE,KAAK,GAAGC,KAAf;AACH;;AAED,SAASR,UAAT,EAAqBI,WAArB","sourcesContent":["const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n"]},"metadata":{},"sourceType":"module"}