{"ast":null,"code":"import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n  constructor() {\n    super(...arguments);\n    this.isSVGTag = false;\n  }\n\n  getBaseTargetFromProps(props, key) {\n    return props[key];\n  }\n\n  readValueFromInstance(instance, key) {\n    if (transformProps.has(key)) {\n      const defaultType = getDefaultValueType(key);\n      return defaultType ? defaultType.default || 0 : 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return instance.getAttribute(key);\n  }\n\n  measureInstanceViewportBox() {\n    return createBox();\n  }\n\n  scrapeMotionValuesFromProps(props, prevProps) {\n    return scrapeMotionValuesFromProps(props, prevProps);\n  }\n\n  build(renderState, latestValues, options, props) {\n    buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n  }\n\n  renderInstance(instance, renderState, styleProp, projection) {\n    renderSVG(instance, renderState, styleProp, projection);\n  }\n\n  mount(instance) {\n    this.isSVGTag = isSVGTag(instance.tagName);\n    super.mount(instance);\n  }\n\n}\n\nexport { SVGVisualElement };","map":{"version":3,"sources":["C:/Users/91800/Desktop/Personal-Portfolio-React-master/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs"],"names":["scrapeMotionValuesFromProps","DOMVisualElement","buildSVGAttrs","camelToDash","camelCaseAttributes","transformProps","renderSVG","getDefaultValueType","createBox","isSVGTag","SVGVisualElement","constructor","arguments","getBaseTargetFromProps","props","key","readValueFromInstance","instance","has","defaultType","default","getAttribute","measureInstanceViewportBox","prevProps","build","renderState","latestValues","options","transformTemplate","renderInstance","styleProp","projection","mount","tagName"],"mappings":"AAAA,SAASA,2BAAT,QAA4C,kCAA5C;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,gBAAN,SAA+BT,gBAA/B,CAAgD;AAC5CU,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKH,QAAL,GAAgB,KAAhB;AACH;;AACDI,EAAAA,sBAAsB,CAACC,KAAD,EAAQC,GAAR,EAAa;AAC/B,WAAOD,KAAK,CAACC,GAAD,CAAZ;AACH;;AACDC,EAAAA,qBAAqB,CAACC,QAAD,EAAWF,GAAX,EAAgB;AACjC,QAAIV,cAAc,CAACa,GAAf,CAAmBH,GAAnB,CAAJ,EAA6B;AACzB,YAAMI,WAAW,GAAGZ,mBAAmB,CAACQ,GAAD,CAAvC;AACA,aAAOI,WAAW,GAAGA,WAAW,CAACC,OAAZ,IAAuB,CAA1B,GAA8B,CAAhD;AACH;;AACDL,IAAAA,GAAG,GAAG,CAACX,mBAAmB,CAACc,GAApB,CAAwBH,GAAxB,CAAD,GAAgCZ,WAAW,CAACY,GAAD,CAA3C,GAAmDA,GAAzD;AACA,WAAOE,QAAQ,CAACI,YAAT,CAAsBN,GAAtB,CAAP;AACH;;AACDO,EAAAA,0BAA0B,GAAG;AACzB,WAAOd,SAAS,EAAhB;AACH;;AACDR,EAAAA,2BAA2B,CAACc,KAAD,EAAQS,SAAR,EAAmB;AAC1C,WAAOvB,2BAA2B,CAACc,KAAD,EAAQS,SAAR,CAAlC;AACH;;AACDC,EAAAA,KAAK,CAACC,WAAD,EAAcC,YAAd,EAA4BC,OAA5B,EAAqCb,KAArC,EAA4C;AAC7CZ,IAAAA,aAAa,CAACuB,WAAD,EAAcC,YAAd,EAA4BC,OAA5B,EAAqC,KAAKlB,QAA1C,EAAoDK,KAAK,CAACc,iBAA1D,CAAb;AACH;;AACDC,EAAAA,cAAc,CAACZ,QAAD,EAAWQ,WAAX,EAAwBK,SAAxB,EAAmCC,UAAnC,EAA+C;AACzDzB,IAAAA,SAAS,CAACW,QAAD,EAAWQ,WAAX,EAAwBK,SAAxB,EAAmCC,UAAnC,CAAT;AACH;;AACDC,EAAAA,KAAK,CAACf,QAAD,EAAW;AACZ,SAAKR,QAAL,GAAgBA,QAAQ,CAACQ,QAAQ,CAACgB,OAAV,CAAxB;AACA,UAAMD,KAAN,CAAYf,QAAZ;AACH;;AA/B2C;;AAkChD,SAASP,gBAAT","sourcesContent":["import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n"]},"metadata":{},"sourceType":"module"}